from google.colab import drive
drive.mount('/content/drive')

import os
import tensorflow as tf
from tensorflow.keras.models import Sequential
from tensorflow.keras.layers import Conv2D, MaxPooling2D, Flatten, Dense, Dropout
from tensorflow.keras.preprocessing.image import ImageDataGenerator
import matplotlib.pyplot as plt
from sklearn.utils.class_weight import compute_class_weight
import numpy as np
from tensorflow.keras.utils import image_dataset_from_directory
from tensorflow.keras.utils import image_dataset_from_directory
import pathlib
from tensorflow.keras import layers
import matplotlib.pyplot as plt
import random

path = '/content/drive/MyDrive/mahesh dataset/Dataset of Mammography with Benign Malignant Breast Masses'
data_dir = pathlib.Path(path)

def dataset_overview(base_path):
  datasets = ['MIAS Dataset', 'INbreast Dataset', 'DDSM Dataset', 'INbreast+MIAS+DDSM Dataset']
  categories = ['Benign Masses', 'Malignant Masses']
  for dataset in datasets:
    print(f"Dataset:{dataset}")
    dataset_dir = os.path.join(base_path, dataset)
    for category in categories:
            category_dir = os.path.join(dataset_dir, category)
            if os.path.exists(category_dir):
                num_images = len(os.listdir(category_dir))
                print(f"  {category}: {num_images} images")
            else:
                print(f"  {category}: Directory not found")

# Display dataset structure overview
dataset_overview(data_dir)

Dataset:MIAS Dataset
  Benign Masses: 2426 images
  Malignant Masses: 1490 images
Dataset:INbreast Dataset
  Benign Masses: 2520 images
  Malignant Masses: 5112 images
Dataset:DDSM Dataset
  Benign Masses: 98 images
  Malignant Masses: 1263 images
Dataset:INbreast+MIAS+DDSM Dataset
  Benign Masses: 10766 images
  Malignant Masses: 13710 images

  def evaluate_model(my_dataset):

  img_height = 224
  img_width = 224
  batch_size = 32
  epochs = 10
  train_data = image_dataset_from_directory(
                  my_dataset,
                  validation_split=0.2,
                  subset="training",
                  seed=123,
                  image_size=(img_height, img_width),
                  batch_size=batch_size)
  val_data = image_dataset_from_directory(my_dataset,
                                        validation_split=0.2,
                                        subset="validation",
                                        seed=123,
                                        image_size=(img_height,img_width),
                                        batch_size=batch_size)
  model = tf.keras.Sequential([

   layers.Rescaling(1./255, input_shape=(img_height, img_width, 3)),

  layers.Conv2D(16, 3, padding='same', activation='relu'),
  layers.MaxPooling2D(),

  layers.Conv2D(32, 3, padding='same', activation='relu'),
  layers.MaxPooling2D(),

  layers.Conv2D(64, 3, padding='same', activation='relu'),
  layers.MaxPooling2D(),

  layers.Dropout(0.5),
  layers.Flatten(),

  layers.Dense(128, activation='relu'),
  layers.Dense(1,activation="sigmoid")
])
  model.compile(optimizer="Adam",
            loss=tf.keras.losses.BinaryCrossentropy(),
            metrics=["accuracy"])

  history = model.fit(train_data,
                    epochs=epochs,
                    validation_data=val_data,
                    batch_size=batch_size)
  loss, accuracy = model.evaluate(val_data)
  print(f"Validation Accuracy: {accuracy:.4f}")
  print(f"Validation Loss: {loss:.4f}")

  acc = history.history['accuracy']
  val_acc =  history.history['val_accuracy']

  loss = history.history['loss']
  val_loss = history.history['val_loss']

  epochs_range = range(epochs)

  plt.figure(figsize=(8,8))
  plt.subplot(1,2,1)
  plt.plot(epochs_range,acc,label='Accuracy')
  plt.plot(epochs_range,val_acc,label="Validation Accuracy")
  plt.legend()

  plt.subplot(1,2,2)
  plt.plot(epochs_range,loss,label='Loss')
  plt.plot(epochs_range,val_loss,label="Validation Loss")
  plt.legend()
  plt.show()




evaluate_model('/content/drive/MyDrive/mahesh dataset/Dataset of Mammography with Benign Malignant Breast Masses/MIAS Dataset')
                          Found 3916 files belonging to 2 classes.
Using 3133 files for training.
Found 3916 files belonging to 2 classes.
Using 783 files for validation.
/usr/local/lib/python3.10/dist-packages/keras/src/layers/preprocessing/tf_data_layer.py:19: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.
  super().__init__(**kwargs)
Epoch 1/10
98/98 ━━━━━━━━━━━━━━━━━━━━ 412s 4s/step - accuracy: 0.5954 - loss: 0.7143 - val_accuracy: 0.6552 - val_loss: 0.6447
Epoch 2/10
98/98 ━━━━━━━━━━━━━━━━━━━━ 49s 177ms/step - accuracy: 0.6704 - loss: 0.6241 - val_accuracy: 0.6807 - val_loss: 0.5990
Epoch 3/10
98/98 ━━━━━━━━━━━━━━━━━━━━ 18s 150ms/step - accuracy: 0.6903 - loss: 0.6049 - val_accuracy: 0.6731 - val_loss: 0.5911
Epoch 4/10
98/98 ━━━━━━━━━━━━━━━━━━━━ 17s 176ms/step - accuracy: 0.7044 - loss: 0.5820 - val_accuracy: 0.6731 - val_loss: 0.6148
Epoch 5/10
98/98 ━━━━━━━━━━━━━━━━━━━━ 18s 150ms/step - accuracy: 0.7218 - loss: 0.5568 - val_accuracy: 0.7791 - val_loss: 0.5145
Epoch 6/10
98/98 ━━━━━━━━━━━━━━━━━━━━ 21s 152ms/step - accuracy: 0.7665 - loss: 0.5082 - val_accuracy: 0.7905 - val_loss: 0.4752
Epoch 7/10
98/98 ━━━━━━━━━━━━━━━━━━━━ 20s 150ms/step - accuracy: 0.7995 - loss: 0.4330 - val_accuracy: 0.8072 - val_loss: 0.4153
Epoch 8/10
98/98 ━━━━━━━━━━━━━━━━━━━━ 21s 156ms/step - accuracy: 0.8171 - loss: 0.3980 - val_accuracy: 0.8365 - val_loss: 0.3558
Epoch 9/10
98/98 ━━━━━━━━━━━━━━━━━━━━ 21s 160ms/step - accuracy: 0.8571 - loss: 0.3193 - val_accuracy: 0.8340 - val_loss: 0.3562
Epoch 10/10
98/98 ━━━━━━━━━━━━━━━━━━━━ 23s 184ms/step - accuracy: 0.8847 - loss: 0.2662 - val_accuracy: 0.8633 - val_loss: 0.3043
25/25 ━━━━━━━━━━━━━━━━━━━━ 3s 112ms/step - accuracy: 0.8825 - loss: 0.2760
Validation Accuracy: 0.8633
Validation Loss: 0.3043
evaluate_model('/content/drive/MyDrive/mahesh dataset/Dataset of Mammography with Benign Malignant Breast Masses/INbreast Dataset')
                                              Using 6106 files for training.
Found 7632 files belonging to 2 classes.
Using 1526 files for validation.
Epoch 1/10
/usr/local/lib/python3.10/dist-packages/keras/src/layers/preprocessing/tf_data_layer.py:19: UserWarning: Do not pass an `input_shape`/`input_dim` argument to a layer. When using Sequential models, prefer using an `Input(shape)` object as the first layer in the model instead.
  super().__init__(**kwargs)
191/191 ━━━━━━━━━━━━━━━━━━━━ 801s 4s/step - accuracy: 0.6588 - loss: 0.6876 - val_accuracy: 0.6651 - val_loss: 0.6240
Epoch 2/10
191/191 ━━━━━━━━━━━━━━━━━━━━ 31s 148ms/step - accuracy: 0.6788 - loss: 0.6171 - val_accuracy: 0.7012 - val_loss: 0.5836
Epoch 3/10
191/191 ━━━━━━━━━━━━━━━━━━━━ 46s 177ms/step - accuracy: 0.7188 - loss: 0.5532 - val_accuracy: 0.7418 - val_loss: 0.5271
Epoch 4/10
191/191 ━━━━━━━━━━━━━━━━━━━━ 41s 176ms/step - accuracy: 0.7745 - loss: 0.4692 - val_accuracy: 0.8067 - val_loss: 0.4249
Epoch 5/10
191/191 ━━━━━━━━━━━━━━━━━━━━ 42s 184ms/step - accuracy: 0.8315 - loss: 0.3665 - val_accuracy: 0.8512 - val_loss: 0.3417
Epoch 6/10
191/191 ━━━━━━━━━━━━━━━━━━━━ 38s 170ms/step - accuracy: 0.8674 - loss: 0.3072 - val_accuracy: 0.8807 - val_loss: 0.2742
Epoch 7/10
191/191 ━━━━━━━━━━━━━━━━━━━━ 41s 171ms/step - accuracy: 0.9084 - loss: 0.2237 - val_accuracy: 0.9096 - val_loss: 0.2180
Epoch 8/10
191/191 ━━━━━━━━━━━━━━━━━━━━ 41s 170ms/step - accuracy: 0.9468 - loss: 0.1446 - val_accuracy: 0.9384 - val_loss: 0.1660
Epoch 9/10
191/191 ━━━━━━━━━━━━━━━━━━━━ 41s 168ms/step - accuracy: 0.9600 - loss: 0.0999 - val_accuracy: 0.9489 - val_loss: 0.1456
Epoch 10/10
191/191 ━━━━━━━━━━━━━━━━━━━━ 36s 145ms/step - accuracy: 0.9761 - loss: 0.0645 - val_accuracy: 0.9469 - val_loss: 0.1641
48/48 ━━━━━━━━━━━━━━━━━━━━ 5s 102ms/step - accuracy: 0.9413 - loss: 0.1821
Validation Accuracy: 0.9469
Validation Loss: 0.1641

evaluate_model('/content/drive/MyDrive/mahesh dataset/Dataset of Mammography with Benign Malignant Breast Masses/INbreast+MIAS+DDSM Dataset')

                                                      evaluate_model('/content/drive/MyDrive/mahesh dataset/Dataset of Mammography with Benign Malignant Breast Masses/INbreast+MIAS+DDSM Dataset')

